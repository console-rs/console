name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            rust: 1.40.0
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            rust: 1.40.0
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            rust: 1.40.0
          - os: windows-latest
            target: i686-pc-windows-msvc
            rust: 1.40.0
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            rust: 1.40.0
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            rust: stable
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            rust: beta
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install linker
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-5-multilib lib32gcc-5-dev
      - name: Test no features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }} --no-default-features
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}
  wasm:
    name: Wasm
    strategy:
      fail-fast: false
      matrix:
          target: [wasm32-unknown-unknown, wasm32-wasi]
    runs-on: ubuntu-latest
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.40.0
          target: ${{ matrix.target }}
          override: true
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target ${{ matrix.target }}
  nightly:
    name: Nightly Tests
    runs-on: ubuntu-latest
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test no features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
  lint:
    name: Linting (fmt + clippy)
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
